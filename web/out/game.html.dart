// Auto-generated from game.html.
// DO NOT EDIT.

library x_game;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;

import 'package:web_ui/web_ui.dart';

class Game extends WebComponent {
  
  /** Autogenerated from the template. */
  
  /**
  * Shadow root for this component. We use 'var' to allow simulating shadow DOM
  * on browsers that don't support this feature.
  */
  var _root;
  autogenerated.ButtonElement __e3;
  autogenerated.DivElement __xGame, __xGameControls;
  autogenerated.ParagraphElement __e6;
  autogenerated.Template __t;
  
  Game.forElement(e) : super.forElement(e);
  
  void created_autogenerated() {
    _root = createShadowRoot();
    __t = new autogenerated.Template(_root);
    _root.innerHtml = '''
    <div id="x-game">
    <div id="x-game-controls">
    <button class="btn btn-danger" id="__e-3">New game</button>
    <p id="__e-6"></p></div>
    <content></content>
    </div>
    ''';
    __xGame = _root.query('#x-game');
    __xGameControls = __xGame.query('#x-game-controls');
    __e3 = __xGameControls.query('#__e-3');
    __t.listen(__e3.onClick, ($event) { newgame($event);; });
    __e6 = __xGameControls.query('#__e-6');
    var __binding4 = __t.contentBind(() => (gameCount));
    var __binding5 = __t.contentBind(() => (gameStartTime));
    __e6.nodes.addAll([
      new autogenerated.Text('game '),
      __binding4,
      new autogenerated.Text(' started at '),
      __binding5,
      new autogenerated.Text('.\n        ')
    ]);
    
    __t.create();
  }
  
  void inserted_autogenerated() {
    __t.insert();
  }
  
  void removed_autogenerated() {
    __t.remove();
    __e3 = __xGame = __xGameControls = __e6 = __t = null;
  }
  
  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated.ShadowRoot) _root = this;
  }
  
  /** Original code from the component. */
  
  int gameCount = 1;
  int turnCount = 0;
  var gameStartTime = new DateTime.now();
  void newgame(e) {
    gameStartTime = new DateTime.now();
    gameCount++;
    var xContainer = document.query('x-container').xtag;
    xContainer.turnCount = 0; //.nextturn(e,true);
    xContainer.turnStartTime = gameStartTime;
    xContainer.begun = false;
  }
}

