// Auto-generated from game.html.
// DO NOT EDIT.

library x_game;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;

import 'package:web_ui/web_ui.dart';

class Game extends WebComponent {
  
  /** Autogenerated from the template. */
  
  /**
  * Shadow root for this component. We use 'var' to allow simulating shadow DOM
  * on browsers that don't support this feature.
  */
  var _root;
  autogenerated.ButtonElement __e2;
  autogenerated.DivElement __xBoardControls, __xGame;
  autogenerated.ParagraphElement __e5;
  autogenerated.Template __t;
  
  Game.forElement(e) : super.forElement(e);
  
  void created_autogenerated() {
    _root = createShadowRoot();
    __t = new autogenerated.Template(_root);
    _root.innerHtml = '''
    <div id="x-game">
    <div id="x-board-controls">
    <button class="btn btn-danger" id="__e-2">New game</button>
    <p id="__e-5"></p></div>
    <content></content>
    </div>
    ''';
    __xGame = _root.query('#x-game');
    __xBoardControls = __xGame.query('#x-board-controls');
    __e2 = __xBoardControls.query('#__e-2');
    __t.listen(__e2.onClick, ($event) { newgame($event);; });
    __e5 = __xBoardControls.query('#__e-5');
    var __binding3 = __t.contentBind(() => (gameCount));
    var __binding4 = __t.contentBind(() => (gameStartTime));
    __e5.nodes.addAll([
      new autogenerated.Text('game '),
      __binding3,
      new autogenerated.Text(' started at '),
      __binding4,
      new autogenerated.Text('.\n        ')
    ]);
    
    __t.create();
  }
  
  void inserted_autogenerated() {
    __t.insert();
  }
  
  void removed_autogenerated() {
    __t.remove();
    __e2 = __xBoardControls = __xGame = __e5 = __t = null;
  }
  
  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated.ShadowRoot) _root = this;
  }
  
  /** Original code from the component. */
  
  int gameCount = 1;
  int turnCount = 0;
  var gameStartTime = new DateTime.now();
  void newgame(e) {
    gameStartTime = new DateTime.now();
    gameCount++;
    var xBoard = document.query('x-board').xtag;
    xBoard.turnCount = 0; //.nextturn(e,true);
    xBoard.turnStartTime = gameStartTime;
    xBoard.begun = false;
  }
}

